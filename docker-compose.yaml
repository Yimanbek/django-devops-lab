services:
  db:
    image: postgres:14
    container_name: yimanbek_db
    restart: always
    environment:
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
      POSTGRES_DB: ${NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/
    
  web:
    build: 
      context: .
    depends_on:
      db:
        condition: service_healthy
    container_name: django_devops_lab-WEB
    restart: always
    ports:
      - "8000:8000"

  migrations:
    build:
      context: .
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate"
    depends_on:
      db:
        condition: service_healthy
    container_name: django_devops_lab-MIGRATIONS
    restart: on-failure

  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A django_devops_lab worker -l INFO
    volumes: 
      - .:/usr/src/app/
    environment:
      - CELERY_BROKER=${CELERY_BROKER_URL}
      - CELERY_BACKEND=${CELERY_BROKER_URL}
    depends_on:
      - web
      - rabbitmq

  rabbitmq: 
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"

  celery_beat:
    build: .
    container_name: celery-beat
    command: celery -A django_devops_lab beat -l INFO
    volumes:
      - .:/usr/src/app/
    depends_on:
      - web
      - rabbitmq

  celery_flower:
    build: .
    command: celery -A django_devops_lab flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - web
      - rabbitmq
    volumes:
      - .:/usr/src/app/
      
volumes:
  pgdata:
